(function() {var implementors = {};
implementors["swc_ecma_ast"] = ["impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"swc_ecma_ast/enum.ExprKind.html\" title=\"enum swc_ecma_ast::ExprKind\">ExprKind</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.Expr.html\" title=\"struct swc_ecma_ast::Expr\">Expr</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"swc_ecma_ast/enum.ModuleDeclKind.html\" title=\"enum swc_ecma_ast::ModuleDeclKind\">ModuleDeclKind</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.ModuleDecl.html\" title=\"struct swc_ecma_ast::ModuleDecl\">ModuleDecl</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"swc_ecma_ast/enum.StmtKind.html\" title=\"enum swc_ecma_ast::StmtKind\">StmtKind</a>&gt; for <a class=\"enum\" href=\"swc_ecma_ast/enum.ModuleItem.html\" title=\"enum swc_ecma_ast::ModuleItem\">ModuleItem</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"swc_ecma_ast/enum.PatKind.html\" title=\"enum swc_ecma_ast::PatKind\">PatKind</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.Pat.html\" title=\"struct swc_ecma_ast::Pat\">Pat</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"swc_ecma_ast/enum.PropKind.html\" title=\"enum swc_ecma_ast::PropKind\">PropKind</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.Prop.html\" title=\"struct swc_ecma_ast::Prop\">Prop</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"swc_ecma_ast/enum.StmtKind.html\" title=\"enum swc_ecma_ast::StmtKind\">StmtKind</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.Stmt.html\" title=\"struct swc_ecma_ast::Stmt\">Stmt</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"swc_ecma_ast/struct.Stmt.html\" title=\"struct swc_ecma_ast::Stmt\">Stmt</a>&gt;&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.BlockStmt.html\" title=\"struct swc_ecma_ast::BlockStmt\">BlockStmt</a>","impl <a class=\"trait\" href=\"swc_common/span/trait.Spanned.html\" title=\"trait swc_common::span::Spanned\">Spanned</a>&lt;<a class=\"type\" href=\"swc_atoms/type.JsWord.html\" title=\"type swc_atoms::JsWord\">JsWord</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/struct.Ident.html\" title=\"struct swc_ecma_ast::Ident\">Ident</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()

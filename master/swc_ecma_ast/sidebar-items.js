initSidebarItems({"enum":[["AssignOp",""],["BinaryOp",""],["BlockStmtOrExpr",""],["ClassMethodKind",""],["Decl",""],["ExportDefaultDecl",""],["ExprKind",""],["ExprOrSpread",""],["ExprOrSuper",""],["ImportSpecifierKind",""],["Lit",""],["ModuleDeclKind",""],["ModuleItem",""],["ObjectPatProp",""],["PatKind",""],["PatOrExpr",""],["PropKind",""],["PropName",""],["StmtKind",""],["UnaryOp",""],["UpdateOp",""],["VarDeclKind",""],["VarDeclOrExpr",""],["VarDeclOrPat",""]],"macro":[["op","Creates a corresponding operator."]],"mod":[["class",""],["decl",""],["expr",""],["function",""],["lit",""],["macros",""],["module",""],["module_decl",""],["operators",""],["pat",""],["prop",""],["stmt",""]],"struct":[["ArrayLit","Array literal."],["ArrowExpr",""],["AssignExpr",""],["AwaitExpr",""],["BinExpr",""],["BlockStmt","Use when only block statements are allowed."],["BreakStmt",""],["CallExpr",""],["CatchClause",""],["Class",""],["ClassDecl",""],["ClassExpr","Class expression."],["ClassMethod",""],["CondExpr",""],["ContinueStmt",""],["DebugUsingDisplay",""],["DoWhileStmt",""],["ExportSpecifier",""],["Expr",""],["FnDecl",""],["FnExpr","Function expression."],["ForInStmt",""],["ForOfStmt",""],["ForStmt",""],["Function","Common parts of function and method."],["Ident","Ident with span."],["IfStmt",""],["ImportSpecifier",""],["LabeledStmt",""],["MemberExpr",""],["MetaPropExpr",""],["Module",""],["ModuleDecl",""],["NewExpr",""],["Number",""],["ObjectLit","Object literal."],["Pat",""],["Prop",""],["Regex",""],["ReturnStmt",""],["SeqExpr",""],["Stmt",""],["SwitchCase",""],["SwitchStmt",""],["ThrowStmt",""],["TplElement",""],["TplLit",""],["TryStmt",""],["UnaryExpr",""],["UpdateExpr",""],["VarDecl",""],["VarDeclarator",""],["WhileStmt",""],["WithStmt",""],["YieldExpr",""]],"type":[["RegexFlags",""]]});